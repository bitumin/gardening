app.l('Loading spanish (es_es) strings.', 'Lang');

app.lang = {};

app.lang.strings = {
  appName: "Gestión de Plantas",
  statistics: "Estadísticas",
  add: "Añadir",
  edit: "Editar",
  del: "Eliminar",
  parents: "Plantas",
  children: "Hijos",
  parent: "Planta",
  child: "Hijo",
  newM: "Nuevo",
  newF: "Nueva",
  save: "Guardar",
  load: "Cargar",
  changes: "Cambios",
  apply: "Aplicar",
  refresh: "Actualizar",
  update: "Actualizar",
  uuid: "UUID",
  inW: "Entrada",
  outW: "Salida",
  date: "Fecha",
  height: "Altura",
  quality: "Calidad",
  production: "Producción",
  room: "Sala",
  defect: "Defecto",
  defects: "Defectos",
  comment: "Comentario",
  comments: "Comentarios",
  reportingPeriod: "Período del informe",
  day: "Día",
  month: "Mes",
  year: "Año",
  dateRange: "Intervalo de fechas",
  from: "Desde",
  to: "Hasta",
  variables: "Variables",
  total: "Total",
  average: "Promedio",
  name: "Nombre",
  number: "Número",
  genetic: "Genética",
  genetics: "Genéticas",
  origin: "Origen",
  cancel: "Cancelar",
  submit: "Enviar",
  thisM: "Este",
  thisF: "Esta",
  deleteParentWarning: "¿Seguro que deseas eliminar esta planta? Se eliminará de la base de datos, incluidos los datos de sus hijos y estadísticas. Una vez confirmada la eliminación, esta acción no podrá deshacerse.",
  deleteChildWarning: "¿Seguro que deseas eliminar este hijo? Se eliminará de la base de datos, junto con sus estadísitcas. Una vez confirmada la eliminación, esta acción no podrá deshacerse.",
  confirmDelete: "Confirmar eliminación",
  //Powered by node, chrome and nodeWebkit (nw.js)
  poweredBy: function() {
    let match = navigator.userAgent.match(/(Chrom[e|ium])\/([0-9]+)\./);
    return "Impulsado por Node.js " + process.versions.node + " " + match[1] + " " + match[2] + " y NW.js " + process.versions['node-webkit'];
  },
  welcomeMsg: function() { return "Bienvenido/a a " + app.lang.strings.appName; },
  saveChanges: function() { return app.lang.strings.save + " " + app.lang.strings.changes.toLowerCase(); },
  addParent: function() { return app.lang.strings.add + " " + app.lang.strings.parent.toLowerCase(); },
  addNewParent: function() { return app.lang.strings.add + " " + app.lang.strings.newF.toLowerCase() + " " + app.lang.strings.parent.toLowerCase(); },
  editParent: function() { return app.lang.strings.edit + " " + app.lang.strings.parent.toLowerCase(); },
  deleteParent: function() { return app.lang.strings.del + " " + app.lang.strings.parent.toLowerCase(); },
  addChild: function() { return app.lang.strings.add + " " + app.lang.strings.child.toLowerCase(); },
  addNewChild: function() { return app.lang.strings.add + " " + app.lang.strings.newM.toLowerCase() + " " + app.lang.strings.child.toLowerCase(); },
  editChild: function() { return app.lang.strings.edit + " " + app.lang.strings.child.toLowerCase(); },
  deleteChild: function() { return app.lang.strings.del + " " + app.lang.strings.child.toLowerCase(); },
  dateIn: function() { return app.lang.strings.date + " " + app.lang.strings.inW.toLowerCase(); },
  dateOut: function() { return app.lang.strings.date + " " + app.lang.strings.outW.toLowerCase(); },
  heightIn: function() { return app.lang.strings.height + " " + app.lang.strings.inW.toLowerCase(); },
  heightOut: function() { return app.lang.strings.height + " " + app.lang.strings.outW.toLowerCase(); },
  qualityIn: function() { return app.lang.strings.quality + " " + app.lang.strings.inW.toLowerCase(); },
  qualityOut: function() { return app.lang.strings.quality + " " + app.lang.strings.outW.toLowerCase(); },
  totalChildrenProduction: function() { return app.lang.strings.production + " " + app.lang.strings.total.toLowerCase() + " de " + app.lang.strings.children.toLowerCase(); },
  averageChildrenProduction: function() { return app.lang.strings.production + " " + app.lang.strings.average.toLowerCase() + " de " + app.lang.strings.children.toLowerCase(); },
  averageInQuality: function() { return app.lang.strings.quality + " de " + app.lang.strings.inW.toLowerCase() + " " + app.lang.strings.average.toLowerCase(); },
  averageOutQuality: function() { return app.lang.strings.quality + " de " + app.lang.strings.outW.toLowerCase() + " " + app.lang.strings.average.toLowerCase(); },
  averageInHeight: function() { return app.lang.strings.height + " de " + app.lang.strings.inW.toLowerCase() + " " + app.lang.strings.average.toLowerCase(); },
  averageOutHeight: function() { return app.lang.strings.height + " de " + app.lang.strings.inW.toLowerCase() + " " + app.lang.strings.average.toLowerCase(); },
  retrievedParent: "Datos de la planta cargados con éxito",
  couldNotRetrieveParent: "Error al tratar de cargar datos de la planta",
  addedParent: "Planta añadida con éxito",
  couldNotAddParent: "Error al tratar de añadir planta",
  savedParent: "Datos de la planta actualizados con éxito",
  couldNotSaveParent: "Error al tratar de actualizar datos de la planta",
  deletedParent: "Planta eliminada con éxito",
  couldNotDeleteParent: "Error al tratar de eliminar planta",
  retrievedChild: "Datos del hijo cargados con éxito",
  couldNotRetrieveChild: "Error al tratar de obtener datos del hijo",
  addedChild: "Hijo añadido con éxito",
  couldNotAddChild: "Error al tratar de agregar nuevo hijo",
  savedChild: "Datos del hijo actualizados con éxito",
  couldNotSaveChild: "Error al tratar de actualizar los datos del hijo",
  deletedChild: "Hijo eliminado",
  couldNotDeleteChild: "Error al tratar de eliminar hijo",
  generated: "Informe generado con éxito",
  couldNotGenerate: "Error al tratar de generar informe"
};
