var NeDB=require("nedb");app.l("NeDB database node module required","Node");app.l("Initializing NeDB datastores","DB");app.db={options:new NeDB({filename:"../datastores/options.db",autoload:true}),genetics:new NeDB({filename:"../datastores/genetics.db",autoload:true}),plants:new NeDB({filename:"../datastores/plants.db",autoload:true}),children:new NeDB({filename:"../datastores/children.db",autoload:true})};app.db.getRandomDoc=function(b){var a;return new Promise(function(d,c){app.db[b].find({}).skip(a).limit(1).exec(function(e,f){if(e){c(Error("Unable to obtain a random doc from "+b+", with error: "+e))}else{d(_.first(f))}})})};app.db.seeders.genetics=function(){app.l("Seeding genetics...","DB");var b=require("faker");var a=0;return new Promise(function(d, c){_.times(app.c.seeders.genetics,function(){app.db.genetics.insert({name:b.lorem.word(),insertDate:new Date(),lastModDate:new Date()},function(e){if(e){c(Error("Unable to seed genetics datastore, with error: "+e))}a++;if(a>=app.c.seeders.genetics){d()}})})})};app.db.seeders.plants=function(){app.l("Seeding plants...","DB");var b=require("faker");var a=0;return new Promise(function(d, c){_.times(app.c.seeders.plants,function(){app.db.getRandomDoc("genetics").then(function(e){app.db.plants.insert({name:b.commerce.productName(),number:Math.floor(Math.random()*99)+1,genId:e._id,origin:b.address.country(),insertDate:new Date(),lastModDate:new Date()},function(f){if(f){c(Error("Unable to seed plants datastore, with error: "+f))}a++;if(a>=app.c.seeders.plants){d()}})})})})};app.db.seeders.children=function(){app.l("Seeding plants...","DB");var b=require("faker");var a=0;return new Promise(function(d, c){app.db.plants.find({},function(e, f){if(e){c(Error("Unable to retrieve plants, children seeder aborted with error: "+e))}else{_.each(f,function(g){_.times(app.c.seeders.childrenPerPlant,function(){var i,h,k,j,l;i=app.c.seeders.childIsOutProbability;h=k=j=l=null;if(Math.random()>(1-i)){h=b.date.recent();k=Math.floor(Math.random()*130)+20;j=_.sample(qualities);l=Math.floor(Math.random()*49)+1}app.db.children.insert({plantId:g._id,inDate:b.date.past(),outDate:h,inHeight:Math.floor(Math.random()*19)+1,outHeight:k,inQuality:_.sample(qualities),outQuality:j,room:b.commerce.color(),production:l,defects:b.lorem.sentence(),comments:b.lorem.paragraph(),insertDate:new Date(),lastModDate:new Date()},function(m){if(m){c(Error("Unable to seed children datastore, with error: "+m))}a++;if(a>=(app.c.seeders.childrenPerPlant*app.c.seeders.plants)){d()}})})})}})})};app.db.seeders=function(){app.db.seeders.genetics().then(app.db.seeders.plants()).then(app.db.seeders.children())};app.db.options.count({},function(b, a){if(a===0){app.l("Initializing datastores for the first time","DB");app.db.options.insert({name:"firstRun",value:false,insertDate:new Date()},function(c){if(c){app.l("Unable to insert firstRun doc in options datastore with error: "+c,"DB")}});if(app.c.env==="dev"||app.c.env==="development"){app.l("Developer mode detected, seeding database...","DB");app.db.seeders()}}});app.l("Database initialized","DB");